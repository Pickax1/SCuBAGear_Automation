{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
		"automationAccountName": {
			"type": "string",
			"defaultValue": "scubarunbook",
			"metadata": {
				"description": "Specify the name of your Automation Account"
			}
		},
        "modulesUri": {
			"type": "string",
			"defaultValue": "https://devopsgallerystorage.blob.core.windows.net/packages/",
			"metadata": {
				"description": "Default modules URI"
			}
		},
		"automationRegion": {
			"type": "string",
			"allowedValues": [
				"eastus2",
				"westcentralus",
				"usgovvirginia",
				"usgovtexas",
				"usgovarizona"
			],
			"metadata": {
				"description": "Specify the region for your automation account"
			}
		},
		"_artifactsLocation": {
			"type": "string",
			"defaultValue": "https://github.com/Pickax1/SCuBAGear_Automation/",
			"metadata": {
			"description": "URI to artifacts location"
			}
		},
        "adminUsername": {
            "type": "string",
            "metadata": {
            "description": "Username for the Virtual Machine."
            }
        },
        "adminPassword": {
            "type": "securestring",
            "minLength": 12,
            "metadata": {
                "description": "Password for the Virtual Machine."
            }
        },
        "dnsLabelPrefix": {
            "type": "string",
            "defaultValue": "[toLower(format('{0}-{1}', parameters('vmName'), uniqueString(resourceGroup().id, parameters('vmName'))))]",
            "metadata": {
                "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
            }
        },
        "publicIpName": {
            "type": "string",
            "defaultValue": "myPublicIP",
            "metadata": {
                "description": "Name for the Public IP used to access the Virtual Machine."
            }
        },
        "publicIPAllocationMethod": {
            "type": "string",
            "defaultValue": "Dynamic",
            "allowedValues": [
                "Dynamic",
                "Static"
            ],
            "metadata": {
                "description": "Allocation method for the Public IP used to access the Virtual Machine."
            }
        },
        "publicIpSku": {
            "type": "string",
            "defaultValue": "Basic",
            "allowedValues": [
                "Basic",
                "Standard"
            ],
            "metadata": {
                "description": "SKU for the Public IP used to access the Virtual Machine."
            }
        },
        "OSVersion": {
            "type": "string",
            "defaultValue": "2022-datacenter-azure-edition",
            "allowedValues": [
                "2016-datacenter-gensecond",
                "2016-datacenter-server-core-g2",
                "2016-datacenter-server-core-smalldisk-g2",
                "2016-datacenter-smalldisk-g2",
                "2016-datacenter-with-containers-g2",
                "2016-datacenter-zhcn-g2",
                "2019-datacenter-core-g2",
                "2019-datacenter-core-smalldisk-g2",
                "2019-datacenter-core-with-containers-g2",
                "2019-datacenter-core-with-containers-smalldisk-g2",
                "2019-datacenter-gensecond",
                "2019-datacenter-smalldisk-g2",
                "2019-datacenter-with-containers-g2",
                "2019-datacenter-with-containers-smalldisk-g2",
                "2019-datacenter-zhcn-g2",
                "2022-datacenter-azure-edition",
                "2022-datacenter-azure-edition-core",
                "2022-datacenter-azure-edition-core-smalldisk",
                "2022-datacenter-azure-edition-smalldisk",
                "2022-datacenter-core-g2",
                "2022-datacenter-core-smalldisk-g2",
                "2022-datacenter-g2",
                "2022-datacenter-smalldisk-g2"
            ],
            "metadata": {
                "description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version."
            }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_D2s_v5",
            "metadata": {
                "description": "Size of the virtual machine."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "vmName": {
            "type": "string",
            "defaultValue": "SCuBA",
            "metadata": {
                "description": "Name of the virtual machine."
            }
        },
        "securityType": {
            "type": "string",
            "defaultValue": "TrustedLaunch",
            "allowedValues": [
                "Standard",
                "TrustedLaunch"
            ],
            "metadata": {
                "description": "Security Type of the Virtual Machine."
            }
        },
        "resourcegroupname": {
            "type": "string",
            "defaultValue": "SCuBA_Automation"
        },
        "hybridRunbookWorkerName": {
            "type": "string",
            "defaultValue": "Worker"
        }
    },
    "variables": {
		"assets": {
			"aaVariables": {
				"CertThumbprint": {
					"name": "CertThumbprint",
					"description": "Self-Signed Certificate Thumbprint"
				},
				"ClientID": {
					"name": "ClientID",
					"description": "Used for Microsoft Graph connection"
				},
				"TenantID": {
					"name": "TenantID",
					"description": "Used for Microsoft Graph connection"
				},
                "StartDate": {
					"name": "StartDate",
					"description": "Extracted from certificate"
				},
                "EndDate": {
					"name": "EndDate",
					"description": "Extracted from certificate"
				},
                "KeyValue": {
					"name": "KeyValue",
					"description": "Extracted from certificate"
				}
			}
		},
        "asrScripts": {
			"runbooks": [{
				"name": "scuba_runbook",
				"url": "[uri(parameters('_artifactsLocation'), 'src/scuba_runbook.ps1')]",
				"version": "1.0.0.0",
				"type": "PowerShell",
				"description": "Run ScubaGear"
			}],
            "modules": [{
					"name": "AzureRm.Compute",
					"url": "[uri(parameters('modulesUri'),'azurerm.compute.2.8.0.nupkg')]"
				},
				{
					"name": "AzureRm.Resources",
					"url": "[uri(parameters('modulesUri'),'azurerm.resources.3.7.0.nupkg')]"
				},
				{
					"name": "AzureRm.Network",
					"url": "[uri(parameters('modulesUri'),'azurerm.network.3.6.0.nupkg')]"
				},
				{
					"name": "AzureRm.Automation",
					"url": "[uri(parameters('modulesUri'),'azurerm.automation.1.0.3.nupkg')]"
				},
				{
					"name": "exchangeonlinemanagement",
					"url": "[uri(parameters('modulesUri'),'exchangeonlinemanagement.3.0.0.nupkg')]"
				},
				{
					"name": "MicrosoftTeams",
					"url": "https://psg-prod-eastus.azureedge.net/packages/microsoftteams.4.9.1.nupkg"
				},
				{
					"name": "Microsoft.Online.SharePoint.PowerShell",
					"url": "[uri(parameters('modulesUri'),'microsoft.online.sharepoint.powershell.16.0.23109.12000.nupkg')]"
				},
				{
					"name": "Microsoft.PowerApps.Administration.PowerShell",
					"url": "[uri(parameters('modulesUri'),'microsoft.powerapps.administration.powershell.2.0.154.nupkg')]"
				},
				{
					"name": "Microsoft.PowerApps.PowerShell",
					"url": "[uri(parameters('modulesUri'),'microsoft.powerapps.powershell.1.0.26.nupkg')]"
				},
				{
					"name": "Microsoft.Graph.Groups",
					"url": "https://psg-prod-eastus.azureedge.net/packages/microsoft.graph.groups.2.12.0.nupkg",
					"dependsOn": ["Microsoft.Graph.Users"]
				},
				{
					"name": "Microsoft.Graph.Identity.DirectoryManagement",
					"url": "https://psg-prod-eastus.azureedge.net/packages/microsoft.graph.identity.directorymanagement.2.12.0.nupkg",
					"dependsOn": ["Microsoft.Graph.Users"]
				},
				{
					"name": "Microsoft.Graph.DeviceManagement.Enrollment",
					"url": "https://psg-prod-eastus.azureedge.net/packages/microsoft.graph.devicemanagement.enrollment.2.12.0.nupkg",
					"dependsOn": ["Microsoft.Graph.Users"]
				},
				{
					"name": "Microsoft.Graph.Identity.SignIns",
					"url": "https://psg-prod-eastus.azureedge.net/packages/microsoft.graph.identity.signins.2.12.0.nupkg",
					"dependsOn": ["Microsoft.Graph.Users"]
				},
				{
					"name": "Microsoft.Graph.Users",
					"url": "https://psg-prod-eastus.azureedge.net/packages/microsoft.graph.users.2.12.0.nupkg",
					"dependsOn": ["Microsoft.Graph.Authentication"]
				},
				{
					"name": "Microsoft.Graph.Identity.Governance",
					"url": "https://psg-prod-eastus.azureedge.net/packages/microsoft.graph.identity.governance.2.12.0.nupkg",
					"dependsOn": ["Microsoft.Graph.Authentication"]
				}

			]
		},
        "azureRmProfile": {
			"name": "AzureRm.Profile",
			"url": "[uri(parameters('modulesUri'),'azurerm.profile.2.7.0.nupkg')]"
		},
		"graphAuth": {
			"name": "Microsoft.Graph.Authentication",
			"url": "[uri(parameters('modulesUri'),'microsoft.graph.authentication.2.12.0.nupkg')]"
		},
        "storageAccountName": "scubagearstorage01",
        "nicName": "myVMNic",
        "addressPrefix": "10.0.0.0/16",
        "subnetName": "Subnet",
        "subnetPrefix": "10.0.0.0/24",
        "virtualNetworkName": "MyVNET",
        "networkSecurityGroupName": "default-NSG",
        "securityProfileJson": {
        "uefiSettings": {
            "secureBootEnabled": true,
            "vTpmEnabled": true
        },
        "securityType": "[parameters('securityType')]"
        },
        "extensionName": "GuestAttestation",
        "extensionPublisher": "Microsoft.Azure.Security.WindowsAttestation",
        "extensionVersion": "1.0",
        "maaTenantName": "GuestAttestation",
        "maaEndpoint": "[substring('emptyString', 0, 0)]"
	},
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2022-05-01",
            "name": "[variables('storageAccountName')]",
            "location": "[parameters('location')]",
            "sku": {
              "name": "Standard_LRS"
            },
            "kind": "Storage"
          },
          {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2022-05-01",
            "name": "[parameters('publicIpName')]",
            "location": "[parameters('location')]",
            "sku": {
              "name": "[parameters('publicIpSku')]"
            },
            "properties": {
              "publicIPAllocationMethod": "[parameters('publicIPAllocationMethod')]",
              "dnsSettings": {
                "domainNameLabel": "[parameters('dnsLabelPrefix')]"
              }
            }
          },
          {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2022-05-01",
            "name": "[variables('networkSecurityGroupName')]",
            "location": "[parameters('location')]",
            "properties": {
              "securityRules": [
                {
                  "name": "default-allow-3389",
                  "properties": {
                    "priority": 1000,
                    "access": "Allow",
                    "direction": "Inbound",
                    "destinationPortRange": "3389",
                    "protocol": "Tcp",
                    "sourcePortRange": "*",
                    "sourceAddressPrefix": "*",
                    "destinationAddressPrefix": "*"
                  }
                }
              ]
            }
          },
          {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2022-05-01",
            "name": "[variables('virtualNetworkName')]",
            "location": "[parameters('location')]",
            "properties": {
              "addressSpace": {
                "addressPrefixes": [
                  "[variables('addressPrefix')]"
                ]
              },
              "subnets": [
                {
                  "name": "[variables('subnetName')]",
                  "properties": {
                    "addressPrefix": "[variables('subnetPrefix')]",
                    "networkSecurityGroup": {
                      "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
                    }
                  }
                }
              ]
            },
            "dependsOn": [
              "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
            ]
          },
          {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2022-05-01",
            "name": "[variables('nicName')]",
            "location": "[parameters('location')]",
            "properties": {
              "ipConfigurations": [
                {
                  "name": "ipconfig1",
                  "properties": {
                    "privateIPAllocationMethod": "Dynamic",
                    "publicIPAddress": {
                      "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIpName'))]"
                    },
                    "subnet": {
                      "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]"
                    }
                  }
                }
              ]
            },
            "dependsOn": [
              "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIpName'))]",
              "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
            ]
          },
          {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2022-03-01",
            "name": "[parameters('vmName')]",
            "location": "[parameters('location')]",
            "properties": {
              "hardwareProfile": {
                "vmSize": "[parameters('vmSize')]"
              },
              "osProfile": {
                "computerName": "[parameters('vmName')]",
                "adminUsername": "[parameters('adminUsername')]",
                "adminPassword": "[parameters('adminPassword')]"
              },
              "storageProfile": {
                "imageReference": {
                  "publisher": "MicrosoftWindowsServer",
                  "offer": "WindowsServer",
                  "sku": "[parameters('OSVersion')]",
                  "version": "latest"
                },
                "osDisk": {
                  "createOption": "FromImage",
                  "managedDisk": {
                    "storageAccountType": "StandardSSD_LRS"
                  }
                },
                "dataDisks": [
                  {
                    "diskSizeGB": 1023,
                    "lun": 0,
                    "createOption": "Empty"
                  }
                ]
              },
              "networkProfile": {
                "networkInterfaces": [
                  {
                    "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
                  }
                ]
              },
              "diagnosticsProfile": {
                "bootDiagnostics": {
                  "enabled": true,
                  "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2022-05-01').primaryEndpoints.blob]"
                }
              },
              "securityProfile": "[if(equals(parameters('securityType'), 'TrustedLaunch'), variables('securityProfileJson'), null())]"
            },
            "dependsOn": [
              "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]",
              "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ]
          },
          {
            "condition": "[and(equals(parameters('securityType'), 'TrustedLaunch'), and(equals(variables('securityProfileJson').uefiSettings.secureBootEnabled, true()), equals(variables('securityProfileJson').uefiSettings.vTpmEnabled, true())))]",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2022-03-01",
            "name": "[format('{0}/{1}', parameters('vmName'), variables('extensionName'))]",
            "location": "[parameters('location')]",
            "properties": {
              "publisher": "[variables('extensionPublisher')]",
              "type": "[variables('extensionName')]",
              "typeHandlerVersion": "[variables('extensionVersion')]",
              "autoUpgradeMinorVersion": true,
              "enableAutomaticUpgrade": true,
              "settings": {
                "AttestationConfig": {
                  "MaaSettings": {
                    "maaEndpoint": "[variables('maaEndpoint')]",
                    "maaTenantName": "[variables('maaTenantName')]"
                  }
                }
              }
            },
            "dependsOn": [
              "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
            ]
          },   
        {
            "type": "Microsoft.Automation/automationAccounts",
            "apiVersion": "2023-11-01",
            "name": "[parameters('automationAccountName')]",
            "location": "[parameters('automationRegion')]",
            "identity": {
                "type": "SystemAssigned"
            },
				"properties": {
					"disableLocalAuth": false,
					"sku": {
						"name": "Basic"
					},
					"encryption": {
						"keySource": "Microsoft.Automation",
						"identity": {}
					}
				}
        },
        {
            "type": "Microsoft.Automation/automationAccounts/hybridRunbookWorkerGroups",
            "apiVersion": "2023-11-01",
            "name": "[concat(parameters('AutomationAccountName'), '/', 'SCuBA_Hybrid_Worker_Group')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('AutomationAccountName'))]"
            ],
            "properties": {
                "credential": {
                    "Name": "[parameters('adminUserName')]",
                    "Password": "[parameters('adminPassword')]"

                }
            }
        },      
        {
            "type": "Microsoft.Automation/automationAccounts/runbooks",
            "apiVersion": "2023-11-01",
            "name": "[concat(parameters('AutomationAccountName'), '/Create_Self-Signed_Certificate')]",
            "location": "[parameters('automationRegion')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('AutomationAccountName'))]"
            ],
            "properties": {
                "runbookType": "PowerShell",
                "logVerbose": false,
                "logProgress": false,
                "logActivityTrace": 0
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/runbooks",
            "apiVersion": "2023-11-01",
            "name": "[concat(parameters('AutomationAccountName'), '/Run_SCuBAGear')]",
            "location": "[parameters('automationRegion')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('AutomationAccountName'))]"
            ],
            "properties": {
                "runbookType": "PowerShell",
                "logVerbose": false,
                "logProgress": false,
                "logActivityTrace": 0
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/variables",
            "apiVersion": "2023-11-01",
            "name": "[concat(parameters('AutomationAccountName'), '/CertThumbprint')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('AutomationAccountName'))]"
            ],
            "properties": {
                "isEncrypted": false,
                "value": "[concat('\"','update me','\"')]"
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/variables",
            "apiVersion": "2023-11-01",
            "name": "[concat(parameters('AutomationAccountName'), '/ClientID')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('AutomationAccountName'))]"
            ],
            "properties": {
                "isEncrypted": false,
                "value": "[concat('\"','update me','\"')]"
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/variables",
            "apiVersion": "2023-11-01",
            "name": "[concat(parameters('AutomationAccountName'), '/TenantID')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('AutomationAccountName'))]"
            ],
            "properties": {
                "isEncrypted": false,
                "value": "[concat('\"','update me','\"')]"
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/variables",
            "apiVersion": "2023-11-01",
            "name": "[concat(parameters('AutomationAccountName'), '/StartDate')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('AutomationAccountName'))]"
            ],
            "properties": {
                "isEncrypted": false,
                "value": "[concat('\"','update me','\"')]"
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/variables",
            "apiVersion": "2023-11-01",
            "name": "[concat(parameters('AutomationAccountName'), '/EndDate')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('AutomationAccountName'))]"
            ],
            "properties": {
                "isEncrypted": false,
                "value": "[concat('\"','update me','\"')]"
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/variables",
            "apiVersion": "2023-11-01",
            "name": "[concat(parameters('AutomationAccountName'), '/KeyValue')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('AutomationAccountName'))]"
            ],
            "properties": {
                "isEncrypted": false,
                "value": "[concat('\"','update me','\"')]"
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/hybridRunbookWorkerGroups/hybridRunbookWorkers",
            "apiVersion": "2023-11-01",
            "name": "[concat(parameters('AutomationAccountName'), '/', 'SCuBA_Hybrid_Worker_Group', '/', parameters('hybridRunbookWorkerName'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts/hybridRunbookWorkerGroups', parameters('AutomationAccountName'), 'SCuBA_Hybrid_Worker_Group')]",
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('AutomationAccountName'))]",
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmname'))]"
            ],
            "properties": {
                "vmResourceId": "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmname'))]"
            }
        }
	]
}
